{"version":3,"sources":["components/Title.js","components/Form.js","components/Weather.js","App.js","index.js"],"names":["Titles","className","Form","props","onSubmit","getWeather","type","name","placeholder","autoComplete","Weather","city","country","temperature","temperature_celsius","humidity","description","key","App","state","error","e","a","preventDefault","target","elements","value","axios","get","response","response2","console","log","setState","Math","floor","data","main","temp","sys","weather","Title","this","React","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sRAYeA,EAVA,WACb,OACE,6BACE,wBAAIC,UAAU,0BAAd,kBACA,uBAAGA,UAAU,6BAAb,kDCkBSC,EAtBF,SAAAC,GACX,OACE,6BACE,0BAAMC,SAAUD,EAAME,YACpB,2BACEC,KAAK,OACLC,KAAK,OACLC,YAAY,UACZC,aAAa,QAEf,2BACEH,KAAK,OACLC,KAAK,UACLC,YAAY,aACZC,aAAa,QAEf,kDCmBOC,EAnCC,SAAAP,GACd,OACE,yBAAKF,UAAU,iBACZE,EAAMQ,MAAQR,EAAMS,SACnB,uBAAGX,UAAU,gBAAb,YAEE,0BAAMA,UAAU,kBACbE,EAAMQ,KADT,KACiBR,EAAMS,UAI1BT,EAAMU,aACL,uBAAGZ,UAAU,gBACV,IADH,eAEe,IACjB,0BAAMA,UAAU,kBAAkBE,EAAMU,YAAxC,SAAwDV,EAAMW,oBAA9D,UAGCX,EAAMY,UACL,uBAAGd,UAAU,gBACV,IADH,aAEY,0BAAMA,UAAU,kBAAkBE,EAAMY,SAAxC,MAGbZ,EAAMa,aACL,uBAAGf,UAAU,gBACV,IADH,cAEc,IACZ,0BAAMA,UAAU,kBAAkBE,EAAMa,gB,gBCvB5CC,EAAM,mCAuEGC,E,4MArEbC,MAAQ,CACNN,YAAa,KACbC,oBAAoB,KACpBH,KAAM,KACNC,QAAS,KACTG,SAAU,KACVC,YAAa,KACbI,MAAO,M,EAITf,W,uCAAa,WAAMgB,GAAN,qBAAAC,EAAA,6DACXD,EAAEE,iBACIZ,EAAOU,EAAEG,OAAOC,SAASd,KAAKe,MAC9Bd,EAAUS,EAAEG,OAAOC,SAASb,QAAQc,MAH/B,SAIYC,IAAMC,IAAN,2DAC+BjB,EAD/B,YACuCC,EADvC,kBACwDK,EADxD,oBAJZ,cAILY,EAJK,gBAOaF,IAAMC,IAAN,2DAC8BjB,EAD9B,YACsCC,EADtC,kBACuDK,EADvD,kBAPb,OAOLa,EAPK,OAUXC,QAAQC,IAAIH,GAEbE,QAAQC,IAAIF,GAIX,EAAKG,SAAS,CACZpB,YAAaqB,KAAKC,MAAMN,EAASO,KAAKC,KAAKC,MAC3CxB,oBAAqBoB,KAAKC,MAAML,EAAUM,KAAKC,KAAKC,MACpD3B,KAAMkB,EAASO,KAAK7B,KACpBK,QAASiB,EAASO,KAAKG,IAAI3B,QAC3BG,SAAUc,EAASO,KAAKC,KAAKtB,SAC7BC,YAAaa,EAASO,KAAKI,QAAQ,GAAGxB,YACtCI,MAAO,0BAvBE,4C,6GA4BX,OACE,6BACE,yBAAKnB,UAAU,WACb,yBAAKA,UAAU,QACb,yBAAKA,UAAU,aACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,4BACb,kBAACwC,EAAD,OAEF,yBAAKxC,UAAU,2BACb,kBAAC,EAAD,CAAMI,WAAYqC,KAAKrC,aACvB,kBAAC,EAAD,CACEQ,YAAa6B,KAAKvB,MAAMN,YACxBC,oBAAqB4B,KAAKvB,MAAML,oBAChCC,SAAU2B,KAAKvB,MAAMJ,SACrBJ,KAAM+B,KAAKvB,MAAMR,KACjBC,QAAS8B,KAAKvB,MAAMP,QACpBI,YAAa0B,KAAKvB,MAAMH,YACxBI,MAAOsB,KAAKvB,MAAMC,kB,GA1DpBuB,IAAMC,WCDxBC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.37543118.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Titles = () => {\r\n  return (\r\n    <div>\r\n      <h1 className=\"title-container__title\">Weather Finder</h1>\r\n      <p className=\"title-container__subtitle\">\r\n        Find out temperature, conditions and more...\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\nexport default Titles;\r\n","import React from \"react\";\r\n\r\nconst Form = props => {\r\n  return (\r\n    <div>\r\n      <form onSubmit={props.getWeather}>\r\n        <input\r\n          type=\"text\"\r\n          name=\"city\"\r\n          placeholder=\"City...\"\r\n          autoComplete=\"off\"\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          name=\"country\"\r\n          placeholder=\"Country...\"\r\n          autoComplete=\"off\"\r\n        />\r\n        <button>Get Weather</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n","import React from \"react\";\r\n\r\nconst Weather = props => {\r\n  return (\r\n    <div className=\"weather__info\">\r\n      {props.city && props.country && (\r\n        <p className=\"weather__key\">\r\n          Location:\r\n          <span className=\"weather__value\">\r\n            {props.city}, {props.country}\r\n          </span>\r\n        </p>\r\n      )}\r\n      {props.temperature && (\r\n        <p className=\"weather__key\">\r\n          {\" \"}\r\n          Temperature:{\" \"}\r\n      <span className=\"weather__value\">{props.temperature}째F|{props.temperature_celsius}째C</span>\r\n        </p>\r\n      )}\r\n      {props.humidity && (\r\n        <p className=\"weather__key\">\r\n          {\" \"}\r\n          Humidity: <span className=\"weather__value\">{props.humidity}%</span>\r\n        </p>\r\n      )}\r\n      {props.description && (\r\n        <p className=\"weather__key\">\r\n          {\" \"}\r\n          Conditions:{\" \"}\r\n          <span className=\"weather__value\">{props.description}</span>\r\n        </p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Weather;\r\n\r\n//째F|째C\r\n","import React from \"react\";\nimport Titles from \"./components/Title\";\nimport Form from \"./components/Form\";\nimport Weather from \"./components/Weather\";\nimport axios from \"axios\";\nimport \"./App.css\";\n\nconst key = \"14a9374f357eda476d01a636a8e863d2\";\nclass App extends React.Component {\n  state = {\n    temperature: null,\n    temperature_celsius:null,\n    city: null,\n    country: null,\n    humidity: null,\n    description: null,\n    error: null\n  };\n  //api\n\n  getWeather = async e => {\n    e.preventDefault();\n    const city = e.target.elements.city.value;\n    const country = e.target.elements.country.value;\n    const response = await axios.get(\n      `http://api.openweathermap.org/data/2.5/weather?q=${city},${country}&appid=${key}&units=imperial`\n    );\n    const response2 = await axios.get(\n      `http://api.openweathermap.org/data/2.5/weather?q=${city},${country}&appid=${key}&units=metric`\n    );\n    console.log(response);\n    \n   console.log(response2);\n   \n   \n\n    this.setState({\n      temperature: Math.floor(response.data.main.temp),\n      temperature_celsius: Math.floor(response2.data.main.temp),\n      city: response.data.name,\n      country: response.data.sys.country,\n      humidity: response.data.main.humidity,\n      description: response.data.weather[0].description,\n      error: \"Please entere a value\"\n    });\n  };\n\n  render() {\n    return (\n      <div>\n        <div className=\"wrapper\">\n          <div className=\"main\">\n            <div className=\"container\">\n              <div className=\"row\">\n                <div className=\"col-xs-5 title-container\">\n                  <Titles />\n                </div>\n                <div className=\"col-xs-7 form-container\">\n                  <Form getWeather={this.getWeather} />\n                  <Weather\n                    temperature={this.state.temperature}\n                    temperature_celsius={this.state.temperature_celsius}\n                    humidity={this.state.humidity}\n                    city={this.state.city}\n                    country={this.state.country}\n                    description={this.state.description}\n                    error={this.state.error}\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\"\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\n"],"sourceRoot":""}